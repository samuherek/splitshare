// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshots 1`] = `
.c1 {
  cursor: text;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
}

.c1.full-width {
  width: 100%;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c1.disabled {
  cursor: default;
  pointer-events: none;
}

.c3 {
  background: none;
  border: 0;
  box-sizing: content-box;
  color: currentColor;
  display: block;
  font: inherit;
  margin: 0;
  min-width: 0;
  padding: 0;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  outline: none;
}

.c3:disabled,
.c3:disabled:hover,
.c3.disabled,
.c3.disabled:hover {
  cursor: default;
  pointer-events: none;
}

.c3::-webkit-search-decoration: {
  -webkit-appearance: none;
}

.c3[type='search'] {
  -moz-appearance: textfield;
  -webkit-appearance: textfield;
}

.c2 {
  padding: 12px 16px;
  border-radius: 4px;
  box-shadow: 0 0 0 1px #dfe1ed;
}

.c2 input,
.c2 textarea {
  font-size: 14px;
  font-weight: 500;
  -webkit-letter-spacing: 0.6px;
  -moz-letter-spacing: 0.6px;
  -ms-letter-spacing: 0.6px;
  letter-spacing: 0.6px;
  color: #424347;
}

.c2 input::-webkit-input-placeholder,
.c2 textarea::-webkit-input-placeholder {
  color: #b7bac7;
  font-weight: normal;
}

.c2 input::-moz-placeholder,
.c2 textarea::-moz-placeholder {
  color: #b7bac7;
  font-weight: normal;
}

.c2 input:-ms-input-placeholder,
.c2 textarea:-ms-input-placeholder {
  color: #b7bac7;
  font-weight: normal;
}

.c2 input::-ms-input-placeholder,
.c2 textarea::-ms-input-placeholder {
  color: #b7bac7;
  font-weight: normal;
}

.c2.focused {
  box-shadow: 0 0 0 2px #0ec76a;
}

.c2.focused input,
.c2.focused textarea {
  color: #424347;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  min-width: 0;
  vertical-align: top;
  width: auto;
}

<div
  class="SSFormControl c0"
>
  <div
    class="outlined SPInputWrap c1 c2"
  >
    <input
      aria-invalid="false"
      class="SSInputBase c3"
      type="text"
      value=""
    />
  </div>
</div>
`;
