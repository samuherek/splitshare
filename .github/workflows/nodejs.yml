# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test_and_build:
    name: Test and build server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.2
      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build server
        working-directory: ./packages/server
        run: yarn build
      - name: Upload server files
        uses: actions/upload-artifact@v1
        with:
          name: server
          path: ./packages/server/dist

  dockerize:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    needs: [test_and_build]

    steps:
      - uses: actions/checkout@v2
      - name: Download compiled server files
        uses: actions/download-artifact@v1
        with:
          name: server
          path: ./packages/server/dist
      - name: Build docker image
        working-directory: ./packages/server
        run: docker --version && yarn docker:build
      - name: Publish docker image
        run: |
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password '${{ secrets.DOCKER_PASSWORD }}'
          docker push samuherek/splitshare:latest


  deploy:
    name: deploy server
    runs-on: ubuntu-latest
    needs: [test_and_build, dockerize]

    steps:
      - name: Setup SSH to splitshare server
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-host: api.splitshare.me
      - name: Connect to the server
        run: |
          ssh sam@api.splitshare.me
          sudo docker login
          ${{ secrets.SERVER_PASSWORD }}
          sudo docker pull samuherek/splitshare:latest
          docker tag samuherek/splitshare:latest dokku/splitshare:latest
          dokku tags:deploy splitshare latest
      - name: Exit server
        run: exit
